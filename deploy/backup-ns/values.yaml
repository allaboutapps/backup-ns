# Default values for backup-ns.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: eu.gcr.io/a3cloud-192413/aw/backup-ns
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

timeZone: "Europe/Vienna"
schedule: "0 0 * * *"

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# You will need to bind the service account to a role that has permission to
# create VolumeSnapshots and execute into the pods.
roleBinding:
  create: false
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: backup-ns-role

lockPermissionFixer:
  enabled: true
  image: busybox:1.26.2
  command: ["sh", "-c", "chmod 777 /mnt/host-backup-locks"]
  volumeMounts:
    - name: host-backup-locks
      mountPath: /mnt/host-backup-locks

additionalInitContainers: []

# Volumes on the output Cronjob definition.
volumes:
  - name: host-backup-locks
    hostPath:
      path: /tmp/backup-ns-locks
      type: DirectoryOrCreate # this controls parallelism (flock) when running multiple jobs on the same node at the same time

# VolumeMounts on the output Cronjob definition.
volumeMounts:
  - name: host-backup-locks
    mountPath: /mnt/host-backup-locks

restartPolicy: Never # do not try to restart the container itself (full pod instead)

concurrencyPolicy: Forbid
successfulJobsHistoryLimit: 3
failedJobsHistoryLimit: 3

backoffLimit: 2 # retry three times.
activeDeadlineSeconds: 10800 # 3h max time before considered failed

envData:
  # see internal/lib/bak_env.go
  BAK_LABEL_VS_TYPE: cronjob
  BAK_FLOCK: "true"
  BAK_FLOCK_DIR: /mnt/host-backup-locks

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


additionalContainers: []

nodeSelector: {}

tolerations: []

affinity: {}

priorityClassName: ""

annotations: {}
